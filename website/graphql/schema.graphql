enum InterviewerStatus{
	WAITING
	AVAILABLE
	ININTERVIEW
}

enum CandidateStatus{
	TOBEINTERVIEWED
	ONGOING
	REJECTED
	SELECTED
}

enum FeedbackStatus{
	REVIEWED
	NOTREVIEWED
}

enum InterviewLevel{
	TECHROUND1
	TECHROUND2
	HRROUND
}


type Admin {
	id: ID! @id
	userName: String
	email: String!
	password: String! @writeonly
}

type Interviewer {
	id: ID! @id
	userName: String
	email: String!
	admin: String @writeonly
	role: String
	image: String
	password: String! @writeonly
	calendarId: String
	skillset: [String]
	status: InterviewerStatus

	interviewList: [Interview!]! @relationship(type: "Interview", direction: OUT)
}


type Candidate {
	id: ID! @id
	name: String!
	college: String
	degree: String
	email: String!
	admin: String @writeonly
	telegramId: String!
	cgpa: String
	track: String!
	skillset: [String] 

	status: CandidateStatus
	interview: Interview @relationship(type: "Interview", direction: OUT)
}

type Interview {
	id: ID! @id
	timeStart: DateTime
	timeEnd: DateTime
	duration: Float
	admin: String @writeonly
	description: String
	level: InterviewLevel
	links: [String]

	feedbacks: [Feedback!]! @relationship(type: "Interview", direction: IN)
	interviewer: Interviewer @relationship(type: "Interview", direction: IN)
	candidate: Candidate @relationship(type: "Interview", direction: IN)
}

type Feedback {
	confidence: Boolean!
	spokenSkills: Boolean!
	technicalSkills: Boolean!
	problemSolving: Boolean!
	teamwork: Boolean!
	response: String!
	description: String

	status: FeedbackStatus
	interview: Interview! @relationship(type: "Interview", direction: OUT)
}

extend type Interviewer 
	@auth(
	rules:[
		{
			operations: [DELETE,CREATE]
			allow: {
				admin:"$jwt.id"
			}
		}
		{
			operations: [CONNECT,DISCONNECT,UPDATE]
			allow: { 
				OR: [
					{ admin: "$jwt.id" }, 
					{ id: "$jwt.id" } 
				] 
			}
		},
	]
)

extend type Interview
	@auth(
	rules:[
		{
			operations: [CONNECT,DISCONNECT,UPDATE]
			allow: { 
				OR: [
					{ admin: "$jwt.id" }, 
					{ interviewer: { id: "$jwt.id" }} 
				] 
			}
		},
		{
			operations: [CREATE,DELETE]
			allow: { 
			 	admin: "$jwt.id", 
			}
		}
	]
)

extend type Candidate 
	@auth(
	rules:[
		{
			operations: [UPDATE,CONNECT,DISCONNECT]
			allow: { 
				OR: [
					{ admin: "$jwt.id" }, 
					{ interviewer: { id: "$jwt.id" }} 
				] 
			}
		},
		{
			operations: [CREATE,DELETE]
			allow: { 
			 	admin: "$jwt.id", 
			}
		}
	]
)

extend type Feedback 
	@auth(
	rules:[{
		operations: [DELETE,UPDATE,CONNECT,DISCONNECT,CREATE]
		allow: {
			interview:{
				interviewer:{
					id:"$jwt.id"
				}
			}
		}
	}]
)
